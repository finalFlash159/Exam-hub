apiVersion: apps/v1
kind: Deployment
metadata:
  name: exam-hub-frontend
  namespace: exam-hub-staging
  labels:
    app: exam-hub-frontend
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: exam-hub-frontend
  template:
    metadata:
      labels:
        app: exam-hub-frontend
        environment: staging
    spec:
      containers:
      - name: frontend
        image: ghcr.io/yourusername/exam-hub/frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: REACT_APP_API_URL
          value: "http://exam-hub-backend:5001"
        - name: REACT_APP_ENVIRONMENT
          value: "staging"

---
apiVersion: v1
kind: Service
metadata:
  name: exam-hub-frontend
  namespace: exam-hub-staging
  labels:
    app: exam-hub-frontend
spec:
  selector:
    app: exam-hub-frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: exam-hub-frontend-ingress
  namespace: exam-hub-staging
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:123456789012:certificate/your-cert-arn
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  rules:
  - host: staging.exam-hub.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: exam-hub-frontend
            port:
              number: 80 