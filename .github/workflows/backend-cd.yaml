name: Backend CD - Deployment

on:
  workflow_run:
    workflows: ["Backend CI - Testing"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  # Job 1: Build and push Docker image
  build-and-push:
    name: Build Docker Image
    runs-on: ubuntu-latest
    # Only run if CI passed
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY_NAME }}/exam-hub-backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY_NAME }}/exam-hub-backend:buildcache
          cache-to: type=registry,ref=registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY_NAME }}/exam-hub-backend:buildcache,mode=max

  # Job 2: Deploy to DigitalOcean App Platform (Option 1 - Recommended)
  deploy-app-platform:
    name: Deploy to App Platform
    runs-on: ubuntu-latest
    needs: build-and-push
    if: false  # Enable this when ready

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Deploy to App Platform
        run: |
          doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }} --wait

      - name: Get deployment status
        run: |
          doctl apps get ${{ secrets.DIGITALOCEAN_APP_ID }}

  # Job 3: Deploy to Droplet via SSH (Option 2 - More control)
  deploy-droplet:
    name: Deploy to Droplet
    runs-on: ubuntu-latest
    needs: build-and-push
    if: false  # Enable this when ready

    steps:
      - name: Deploy to Droplet via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Pull latest image
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            docker pull registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY_NAME }}/exam-hub-backend:latest

            # Stop old container
            docker stop exam-hub-backend || true
            docker rm exam-hub-backend || true

            # Start new container
            docker run -d \
              --name exam-hub-backend \
              --restart unless-stopped \
              -p 5001:5001 \
              --env-file /root/exam-hub/.env \
              registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY_NAME }}/exam-hub-backend:latest

            # Clean up old images
            docker image prune -af
